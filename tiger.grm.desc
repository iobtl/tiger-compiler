
state 0:

	program : . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 3
	program	goto 137
	lval	goto 2
	lval'	goto 1

	.	error


state 1:

	exp : lval' .  (reduce by rule 36)
	lval : lval' .  (reduce by rule 32)
	lval' : lval' . LBRACK exp RBRACK 

	EOF	reduce by rule 36
	COMMA	reduce by rule 36
	SEMICOLON	reduce by rule 36
	RPAREN	reduce by rule 36
	LBRACK	shift 15
	RBRACK	reduce by rule 36
	RBRACE	reduce by rule 36
	DOT	reduce by rule 32
	PLUS	reduce by rule 36
	MINUS	reduce by rule 36
	TIMES	reduce by rule 36
	DIVIDE	reduce by rule 36
	EQ	reduce by rule 36
	NEQ	reduce by rule 36
	LT	reduce by rule 36
	LE	reduce by rule 36
	GT	reduce by rule 36
	GE	reduce by rule 36
	AND	reduce by rule 36
	OR	reduce by rule 36
	ASSIGN	reduce by rule 32
	THEN	reduce by rule 36
	ELSE	reduce by rule 36
	TO	reduce by rule 36
	DO	reduce by rule 36
	IN	reduce by rule 36
	END	reduce by rule 36
	FUNCTION	reduce by rule 36
	VAR	reduce by rule 36
	TYPE	reduce by rule 36


	.	error


state 2:

	exp : lval . ASSIGN exp 
	lval' : lval . DOT ID 

	DOT	shift 17
	ASSIGN	shift 16


	.	error


state 3:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 
	program : exp .  (reduce by rule 0)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 0


state 4:

	exp : NIL .  (reduce by rule 37)



	.	reduce by rule 37


state 5:

	exp : BREAK .  (reduce by rule 50)



	.	reduce by rule 50


state 6:

	exp : LET . declaration_list IN exp_seq END 

	FUNCTION	shift 39
	VAR	shift 38
	TYPE	shift 37

	declaration_list	goto 36
	declaration	goto 35
	ty_declaration	goto 34
	ty_declaration_ls	goto 33
	var_declaration	goto 32
	func_declaration	goto 31
	func_declaration_ls	goto 30

	.	reduce by rule 1


state 7:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 40


	.	error


state 8:

	exp : WHILE . exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 41
	lval	goto 2
	lval'	goto 1

	.	error


state 9:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 42
	lval	goto 2
	lval'	goto 1

	.	error


state 10:

	exp : MINUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 43
	lval	goto 2
	lval'	goto 1

	.	error


state 11:

	exp : LPAREN . exp_seq RPAREN 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 45
	lval	goto 2
	lval'	goto 1
	exp_seq	goto 44

	.	reduce by rule 28


state 12:

	exp : STRING .  (reduce by rule 39)



	.	reduce by rule 39


state 13:

	exp : INT .  (reduce by rule 38)



	.	reduce by rule 38


state 14:

	exp : ID .  (reduce by rule 35)
	exp : ID . LPAREN exps RPAREN 
	exp : ID . LBRACE field_list RBRACE 
	exp : ID . LBRACK exp RBRACK OF exp 
	lval : ID .  (reduce by rule 31)

	EOF	reduce by rule 35
	COMMA	reduce by rule 35
	SEMICOLON	reduce by rule 35
	LPAREN	shift 48
	RPAREN	reduce by rule 35
	LBRACK	shift 47
	RBRACK	reduce by rule 35
	LBRACE	shift 46
	RBRACE	reduce by rule 35
	DOT	reduce by rule 31
	PLUS	reduce by rule 35
	MINUS	reduce by rule 35
	TIMES	reduce by rule 35
	DIVIDE	reduce by rule 35
	EQ	reduce by rule 35
	NEQ	reduce by rule 35
	LT	reduce by rule 35
	LE	reduce by rule 35
	GT	reduce by rule 35
	GE	reduce by rule 35
	AND	reduce by rule 35
	OR	reduce by rule 35
	ASSIGN	reduce by rule 31
	THEN	reduce by rule 35
	ELSE	reduce by rule 35
	TO	reduce by rule 35
	DO	reduce by rule 35
	IN	reduce by rule 35
	END	reduce by rule 35
	FUNCTION	reduce by rule 35
	VAR	reduce by rule 35
	TYPE	reduce by rule 35


	.	error


state 15:

	lval' : lval' LBRACK . exp RBRACK 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 49
	lval	goto 2
	lval'	goto 1

	.	error


state 16:

	exp : lval ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 50
	lval	goto 2
	lval'	goto 1

	.	error


state 17:

	lval' : lval DOT . ID 

	ID	shift 51


	.	error


state 18:

	exp : exp OR . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 52
	lval	goto 2
	lval'	goto 1

	.	error


state 19:

	exp : exp AND . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 53
	lval	goto 2
	lval'	goto 1

	.	error


state 20:

	exp : exp GE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 54
	lval	goto 2
	lval'	goto 1

	.	error


state 21:

	exp : exp GT . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 55
	lval	goto 2
	lval'	goto 1

	.	error


state 22:

	exp : exp LE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 56
	lval	goto 2
	lval'	goto 1

	.	error


state 23:

	exp : exp LT . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 57
	lval	goto 2
	lval'	goto 1

	.	error


state 24:

	exp : exp NEQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 58
	lval	goto 2
	lval'	goto 1

	.	error


state 25:

	exp : exp EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 59
	lval	goto 2
	lval'	goto 1

	.	error


state 26:

	exp : exp DIVIDE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 60
	lval	goto 2
	lval'	goto 1

	.	error


state 27:

	exp : exp TIMES . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 61
	lval	goto 2
	lval'	goto 1

	.	error


state 28:

	exp : exp MINUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 62
	lval	goto 2
	lval'	goto 1

	.	error


state 29:

	exp : exp PLUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 63
	lval	goto 2
	lval'	goto 1

	.	error


state 30:

	declaration : func_declaration_ls .  (reduce by rule 5)



	.	reduce by rule 5


state 31:

	func_declaration_ls : func_declaration .  (reduce by rule 18)
	func_declaration_ls : func_declaration . func_declaration_ls 


	func_declaration	goto 31
	func_declaration_ls	goto 64

	.	reduce by rule 18


state 32:

	declaration : var_declaration .  (reduce by rule 3)



	.	reduce by rule 3


state 33:

	declaration : ty_declaration_ls .  (reduce by rule 4)



	.	reduce by rule 4


state 34:

	ty_declaration_ls : ty_declaration .  (reduce by rule 6)
	ty_declaration_ls : ty_declaration . ty_declaration_ls 


	ty_declaration	goto 34
	ty_declaration_ls	goto 65

	.	reduce by rule 6


state 35:

	declaration_list : declaration . declaration_list 

	FUNCTION	shift 39
	VAR	shift 38
	TYPE	shift 37

	declaration_list	goto 66
	declaration	goto 35
	ty_declaration	goto 34
	ty_declaration_ls	goto 33
	var_declaration	goto 32
	func_declaration	goto 31
	func_declaration_ls	goto 30

	.	reduce by rule 1


state 36:

	exp : LET declaration_list . IN exp_seq END 

	IN	shift 67


	.	error


state 37:

	ty_declaration : TYPE . ID EQ ty 

	ID	shift 68


	.	error


state 38:

	var_declaration : VAR . ID ASSIGN exp 
	var_declaration : VAR . ID COLON ID ASSIGN exp 

	ID	shift 69


	.	error


state 39:

	func_declaration : FUNCTION . ID LPAREN ty_fields RPAREN EQ exp 
	func_declaration : FUNCTION . ID LPAREN ty_fields RPAREN COLON ID EQ exp 

	ID	shift 70


	.	error


state 40:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 71


	.	error


state 41:

	exp : WHILE exp . DO exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	DO	shift 72


	.	error


state 42:

	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	THEN	shift 73


	.	error


state 43:

	exp : MINUS exp .  (reduce by rule 40)
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 



	.	reduce by rule 40


state 44:

	exp : LPAREN exp_seq . RPAREN 

	RPAREN	shift 74


	.	error


state 45:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 
	exp_seq : exp .  (reduce by rule 29)
	exp_seq : exp . SEMICOLON exp_seq 

	SEMICOLON	shift 75
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 29


state 46:

	exp : ID LBRACE . field_list RBRACE 

	ID	shift 77

	field_list	goto 76

	.	reduce by rule 22


state 47:

	exp : ID LBRACK . exp RBRACK OF exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 78
	lval	goto 2
	lval'	goto 1

	.	error


state 48:

	exp : ID LPAREN . exps RPAREN 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 80
	lval	goto 2
	lval'	goto 1
	exps	goto 79

	.	reduce by rule 25


state 49:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 
	lval' : lval' LBRACK exp . RBRACK 

	RBRACK	shift 81
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	error


state 50:

	exp : lval ASSIGN exp .  (reduce by rule 45)
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 45


state 51:

	lval' : lval DOT ID .  (reduce by rule 33)



	.	reduce by rule 33


state 52:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 62)
	exp : exp . PLUS exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19


	.	reduce by rule 62


state 53:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 61)
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20


	.	reduce by rule 61


state 54:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 59)
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	EOF	reduce by rule 59
	COMMA	reduce by rule 59
	SEMICOLON	reduce by rule 59
	RPAREN	reduce by rule 59
	RBRACK	reduce by rule 59
	RBRACE	reduce by rule 59
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 59
	OR	reduce by rule 59
	THEN	reduce by rule 59
	ELSE	reduce by rule 59
	TO	reduce by rule 59
	DO	reduce by rule 59
	IN	reduce by rule 59
	END	reduce by rule 59
	FUNCTION	reduce by rule 59
	VAR	reduce by rule 59
	TYPE	reduce by rule 59


	.	error


state 55:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 57)
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	EOF	reduce by rule 57
	COMMA	reduce by rule 57
	SEMICOLON	reduce by rule 57
	RPAREN	reduce by rule 57
	RBRACK	reduce by rule 57
	RBRACE	reduce by rule 57
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 57
	OR	reduce by rule 57
	THEN	reduce by rule 57
	ELSE	reduce by rule 57
	TO	reduce by rule 57
	DO	reduce by rule 57
	IN	reduce by rule 57
	END	reduce by rule 57
	FUNCTION	reduce by rule 57
	VAR	reduce by rule 57
	TYPE	reduce by rule 57


	.	error


state 56:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 60)
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	EOF	reduce by rule 60
	COMMA	reduce by rule 60
	SEMICOLON	reduce by rule 60
	RPAREN	reduce by rule 60
	RBRACK	reduce by rule 60
	RBRACE	reduce by rule 60
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 60
	OR	reduce by rule 60
	THEN	reduce by rule 60
	ELSE	reduce by rule 60
	TO	reduce by rule 60
	DO	reduce by rule 60
	IN	reduce by rule 60
	END	reduce by rule 60
	FUNCTION	reduce by rule 60
	VAR	reduce by rule 60
	TYPE	reduce by rule 60


	.	error


state 57:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 58)
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	EOF	reduce by rule 58
	COMMA	reduce by rule 58
	SEMICOLON	reduce by rule 58
	RPAREN	reduce by rule 58
	RBRACK	reduce by rule 58
	RBRACE	reduce by rule 58
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 58
	OR	reduce by rule 58
	THEN	reduce by rule 58
	ELSE	reduce by rule 58
	TO	reduce by rule 58
	DO	reduce by rule 58
	IN	reduce by rule 58
	END	reduce by rule 58
	FUNCTION	reduce by rule 58
	VAR	reduce by rule 58
	TYPE	reduce by rule 58


	.	error


state 58:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 56)
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	EOF	reduce by rule 56
	COMMA	reduce by rule 56
	SEMICOLON	reduce by rule 56
	RPAREN	reduce by rule 56
	RBRACK	reduce by rule 56
	RBRACE	reduce by rule 56
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 56
	OR	reduce by rule 56
	THEN	reduce by rule 56
	ELSE	reduce by rule 56
	TO	reduce by rule 56
	DO	reduce by rule 56
	IN	reduce by rule 56
	END	reduce by rule 56
	FUNCTION	reduce by rule 56
	VAR	reduce by rule 56
	TYPE	reduce by rule 56


	.	error


state 59:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 55)
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	EOF	reduce by rule 55
	COMMA	reduce by rule 55
	SEMICOLON	reduce by rule 55
	RPAREN	reduce by rule 55
	RBRACK	reduce by rule 55
	RBRACE	reduce by rule 55
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 55
	OR	reduce by rule 55
	THEN	reduce by rule 55
	ELSE	reduce by rule 55
	TO	reduce by rule 55
	DO	reduce by rule 55
	IN	reduce by rule 55
	END	reduce by rule 55
	FUNCTION	reduce by rule 55
	VAR	reduce by rule 55
	TYPE	reduce by rule 55


	.	error


state 60:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 53)
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 



	.	reduce by rule 53


state 61:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 54)
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 



	.	reduce by rule 54


state 62:

	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 52)
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	TIMES	shift 27
	DIVIDE	shift 26


	.	reduce by rule 52


state 63:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 63)

	TIMES	shift 27
	DIVIDE	shift 26


	.	reduce by rule 63


state 64:

	func_declaration_ls : func_declaration func_declaration_ls .  (reduce by rule 19)



	.	reduce by rule 19


state 65:

	ty_declaration_ls : ty_declaration ty_declaration_ls .  (reduce by rule 7)



	.	reduce by rule 7


state 66:

	declaration_list : declaration declaration_list .  (reduce by rule 2)



	.	reduce by rule 2


state 67:

	exp : LET declaration_list IN . exp_seq END 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 45
	lval	goto 2
	lval'	goto 1
	exp_seq	goto 82

	.	reduce by rule 28


state 68:

	ty_declaration : TYPE ID . EQ ty 

	EQ	shift 83


	.	error


state 69:

	var_declaration : VAR ID . ASSIGN exp 
	var_declaration : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 85
	ASSIGN	shift 84


	.	error


state 70:

	func_declaration : FUNCTION ID . LPAREN ty_fields RPAREN EQ exp 
	func_declaration : FUNCTION ID . LPAREN ty_fields RPAREN COLON ID EQ exp 

	LPAREN	shift 86


	.	error


state 71:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 87
	lval	goto 2
	lval'	goto 1

	.	error


state 72:

	exp : WHILE exp DO . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 88
	lval	goto 2
	lval'	goto 1

	.	error


state 73:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 89
	lval	goto 2
	lval'	goto 1

	.	error


state 74:

	exp : LPAREN exp_seq RPAREN .  (reduce by rule 41)



	.	reduce by rule 41


state 75:

	exp_seq : exp SEMICOLON . exp_seq 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 45
	lval	goto 2
	lval'	goto 1
	exp_seq	goto 90

	.	reduce by rule 28


state 76:

	exp : ID LBRACE field_list . RBRACE 

	RBRACE	shift 91


	.	error


state 77:

	field_list : ID . EQ exp 
	field_list : ID . EQ exp COMMA field_list 

	EQ	shift 92


	.	error


state 78:

	exp : ID LBRACK exp . RBRACK OF exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	RBRACK	shift 93
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	error


state 79:

	exp : ID LPAREN exps . RPAREN 

	RPAREN	shift 94


	.	error


state 80:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 
	exps : exp .  (reduce by rule 26)
	exps : exp . COMMA exps 

	COMMA	shift 95
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 26


state 81:

	lval' : lval' LBRACK exp RBRACK .  (reduce by rule 34)



	.	reduce by rule 34


state 82:

	exp : LET declaration_list IN exp_seq . END 

	END	shift 96


	.	error


state 83:

	ty_declaration : TYPE ID EQ . ty 

	ID	shift 100
	LBRACE	shift 99
	ARRAY	shift 98

	ty	goto 97

	.	error


state 84:

	var_declaration : VAR ID ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 101
	lval	goto 2
	lval'	goto 1

	.	error


state 85:

	var_declaration : VAR ID COLON . ID ASSIGN exp 

	ID	shift 102


	.	error


state 86:

	func_declaration : FUNCTION ID LPAREN . ty_fields RPAREN EQ exp 
	func_declaration : FUNCTION ID LPAREN . ty_fields RPAREN COLON ID EQ exp 

	ID	shift 106
	COMMA	shift 105

	ty_fields	goto 104
	ty_field	goto 103

	.	reduce by rule 13


state 87:

	exp : FOR ID ASSIGN exp . TO exp DO exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	TO	shift 107


	.	error


state 88:

	exp : WHILE exp DO exp .  (reduce by rule 48)
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 48


state 89:

	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 47)
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	ELSE	shift 108


	.	reduce by rule 47


state 90:

	exp_seq : exp SEMICOLON exp_seq .  (reduce by rule 30)



	.	reduce by rule 30


state 91:

	exp : ID LBRACE field_list RBRACE .  (reduce by rule 43)



	.	reduce by rule 43


state 92:

	field_list : ID EQ . exp 
	field_list : ID EQ . exp COMMA field_list 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 109
	lval	goto 2
	lval'	goto 1

	.	error


state 93:

	exp : ID LBRACK exp RBRACK . OF exp 

	OF	shift 110


	.	error


state 94:

	exp : ID LPAREN exps RPAREN .  (reduce by rule 42)



	.	reduce by rule 42


state 95:

	exps : exp COMMA . exps 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 80
	lval	goto 2
	lval'	goto 1
	exps	goto 111

	.	reduce by rule 25


state 96:

	exp : LET declaration_list IN exp_seq END .  (reduce by rule 51)



	.	reduce by rule 51


state 97:

	ty_declaration : TYPE ID EQ ty .  (reduce by rule 8)



	.	reduce by rule 8


state 98:

	ty : ARRAY . OF ID 

	OF	shift 112


	.	error


state 99:

	ty : LBRACE . ty_fields RBRACE 

	ID	shift 106
	COMMA	shift 105

	ty_fields	goto 113
	ty_field	goto 103

	.	reduce by rule 13


state 100:

	ty : ID .  (reduce by rule 9)



	.	reduce by rule 9


state 101:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 
	var_declaration : VAR ID ASSIGN exp .  (reduce by rule 16)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 16


state 102:

	var_declaration : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 114


	.	error


state 103:

	ty_fields : ty_field . ty_fields 

	ID	shift 106
	COMMA	shift 105

	ty_fields	goto 115
	ty_field	goto 103

	.	reduce by rule 13


state 104:

	func_declaration : FUNCTION ID LPAREN ty_fields . RPAREN EQ exp 
	func_declaration : FUNCTION ID LPAREN ty_fields . RPAREN COLON ID EQ exp 

	RPAREN	shift 116


	.	error


state 105:

	ty_fields : COMMA . ty_field ty_fields 

	ID	shift 106

	ty_field	goto 117

	.	error


state 106:

	ty_field : ID . COLON ID 

	COLON	shift 118


	.	error


state 107:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 119
	lval	goto 2
	lval'	goto 1

	.	error


state 108:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 120
	lval	goto 2
	lval'	goto 1

	.	error


state 109:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 
	field_list : ID EQ exp .  (reduce by rule 23)
	field_list : ID EQ exp . COMMA field_list 

	COMMA	shift 121
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 23


state 110:

	exp : ID LBRACK exp RBRACK OF . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 122
	lval	goto 2
	lval'	goto 1

	.	error


state 111:

	exps : exp COMMA exps .  (reduce by rule 27)



	.	reduce by rule 27


state 112:

	ty : ARRAY OF . ID 

	ID	shift 123


	.	error


state 113:

	ty : LBRACE ty_fields . RBRACE 

	RBRACE	shift 124


	.	error


state 114:

	var_declaration : VAR ID COLON ID ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 125
	lval	goto 2
	lval'	goto 1

	.	error


state 115:

	ty_fields : ty_field ty_fields .  (reduce by rule 14)



	.	reduce by rule 14


state 116:

	func_declaration : FUNCTION ID LPAREN ty_fields RPAREN . EQ exp 
	func_declaration : FUNCTION ID LPAREN ty_fields RPAREN . COLON ID EQ exp 

	COLON	shift 127
	EQ	shift 126


	.	error


state 117:

	ty_fields : COMMA ty_field . ty_fields 

	ID	shift 106
	COMMA	shift 105

	ty_fields	goto 128
	ty_field	goto 103

	.	reduce by rule 13


state 118:

	ty_field : ID COLON . ID 

	ID	shift 129


	.	error


state 119:

	exp : FOR ID ASSIGN exp TO exp . DO exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	DO	shift 130


	.	error


state 120:

	exp : IF exp THEN exp ELSE exp .  (reduce by rule 46)
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 46


state 121:

	field_list : ID EQ exp COMMA . field_list 

	ID	shift 77

	field_list	goto 131

	.	reduce by rule 22


state 122:

	exp : ID LBRACK exp RBRACK OF exp .  (reduce by rule 44)
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 44


state 123:

	ty : ARRAY OF ID .  (reduce by rule 11)



	.	reduce by rule 11


state 124:

	ty : LBRACE ty_fields RBRACE .  (reduce by rule 10)



	.	reduce by rule 10


state 125:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 
	var_declaration : VAR ID COLON ID ASSIGN exp .  (reduce by rule 17)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 17


state 126:

	func_declaration : FUNCTION ID LPAREN ty_fields RPAREN EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 132
	lval	goto 2
	lval'	goto 1

	.	error


state 127:

	func_declaration : FUNCTION ID LPAREN ty_fields RPAREN COLON . ID EQ exp 

	ID	shift 133


	.	error


state 128:

	ty_fields : COMMA ty_field ty_fields .  (reduce by rule 15)



	.	reduce by rule 15


state 129:

	ty_field : ID COLON ID .  (reduce by rule 12)



	.	reduce by rule 12


state 130:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 134
	lval	goto 2
	lval'	goto 1

	.	error


state 131:

	field_list : ID EQ exp COMMA field_list .  (reduce by rule 24)



	.	reduce by rule 24


state 132:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 
	func_declaration : FUNCTION ID LPAREN ty_fields RPAREN EQ exp .  (reduce by rule 20)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 20


state 133:

	func_declaration : FUNCTION ID LPAREN ty_fields RPAREN COLON ID . EQ exp 

	EQ	shift 135


	.	error


state 134:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 49)
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 49


state 135:

	func_declaration : FUNCTION ID LPAREN ty_fields RPAREN COLON ID EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 136
	lval	goto 2
	lval'	goto 1

	.	error


state 136:

	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . PLUS exp 
	func_declaration : FUNCTION ID LPAREN ty_fields RPAREN COLON ID EQ exp .  (reduce by rule 21)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 21


state 137:


	EOF	accept


	.	error

538 of 1049 action table entries left after compaction
144 goto table entries
